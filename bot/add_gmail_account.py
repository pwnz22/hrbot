#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ Gmail –∞–∫–∫–∞—É–Ω—Ç–∞ –≤ –±–æ—Ç–∞
"""
import os
import json
from google.auth.transport.requests import Request
from google.oauth2.credentials import Credentials
from google_auth_oauthlib.flow import InstalledAppFlow
from googleapiclient.discovery import build

SCOPES = ['https://www.googleapis.com/auth/gmail.modify']
CREDENTIALS_PATH = 'gmail_tokens/credentials.json'
ACCOUNTS_CONFIG_PATH = 'bot/gmail_accounts.json'


def get_gmail_email(service):
    """–ü–æ–ª—É—á–∞–µ—Ç email –∞–¥—Ä–µ—Å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    try:
        profile = service.users().getProfile(userId='me').execute()
        return profile.get('emailAddress')
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è email: {e}")
        return None


def authenticate_new_account():
    """–ê–≤—Ç–æ—Ä–∏–∑—É–µ—Ç –Ω–æ–≤—ã–π Gmail –∞–∫–∫–∞—É–Ω—Ç –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç credentials –∏ email"""
    if not os.path.exists(CREDENTIALS_PATH):
        print(f"‚ùå –§–∞–π–ª {CREDENTIALS_PATH} –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        print(f"–°–æ–∑–¥–∞–π—Ç–µ OAuth –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤ Google Cloud Console –∏ —Å–æ—Ö—Ä–∞–Ω–∏—Ç–µ credentials.json")
        return None, None

    print("üîê –ù–∞—á–∏–Ω–∞–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é –Ω–æ–≤–æ–≥–æ Gmail –∞–∫–∫–∞—É–Ω—Ç–∞...")
    print("–û—Ç–∫—Ä–æ–µ—Ç—Å—è –±—Ä–∞—É–∑–µ—Ä, –≤—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π Gmail –∞–∫–∫–∞—É–Ω—Ç")

    flow = InstalledAppFlow.from_client_secrets_file(CREDENTIALS_PATH, SCOPES)
    creds = flow.run_local_server(port=0)

    # –ü–æ–ª—É—á–∞–µ–º email –∞–¥—Ä–µ—Å
    service = build('gmail', 'v1', credentials=creds)
    email = get_gmail_email(service)

    return creds, email


def load_accounts_config():
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –∞–∫–∫–∞—É–Ω—Ç–æ–≤"""
    if not os.path.exists(ACCOUNTS_CONFIG_PATH):
        return []

    with open(ACCOUNTS_CONFIG_PATH, 'r', encoding='utf-8') as f:
        return json.load(f)


def save_accounts_config(accounts):
    """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –∞–∫–∫–∞—É–Ω—Ç–æ–≤"""
    os.makedirs(os.path.dirname(ACCOUNTS_CONFIG_PATH), exist_ok=True)
    with open(ACCOUNTS_CONFIG_PATH, 'w', encoding='utf-8') as f:
        json.dump(accounts, f, indent=2, ensure_ascii=False)


def generate_account_id(email):
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç ID –∞–∫–∫–∞—É–Ω—Ç–∞ –∏–∑ email"""
    # –ë–µ—Ä–µ–º —á–∞—Å—Ç—å –¥–æ @ –∏ –æ—á–∏—â–∞–µ–º –æ—Ç —Ç–æ—á–µ–∫
    username = email.split('@')[0].replace('.', '_')
    return username


def add_account_to_config(account_id, account_name, token_path):
    """–î–æ–±–∞–≤–ª—è–µ—Ç –Ω–æ–≤—ã–π –∞–∫–∫–∞—É–Ω—Ç –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é"""
    accounts = load_accounts_config()

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ —Ç–∞–∫–æ–π –∞–∫–∫–∞—É–Ω—Ç
    for account in accounts:
        if account['id'] == account_id:
            print(f"‚ö†Ô∏è  –ê–∫–∫–∞—É–Ω—Ç —Å ID '{account_id}' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
            return False

    new_account = {
        "id": account_id,
        "name": account_name,
        "credentials_path": "gmail_tokens/credentials.json",
        "token_path": token_path,
        "enabled": False  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –æ—Ç–∫–ª—é—á–µ–Ω
    }

    accounts.append(new_account)
    save_accounts_config(accounts)

    return True


def main():
    print("=" * 60)
    print("üìß –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ Gmail –∞–∫–∫–∞—É–Ω—Ç–∞ –≤ HR –±–æ—Ç–∞")
    print("=" * 60)
    print()

    # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è —Ç–æ–∫–µ–Ω–æ–≤ –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
    os.makedirs('gmail_tokens', exist_ok=True)

    # –ê–≤—Ç–æ—Ä–∏–∑—É–µ–º –Ω–æ–≤—ã–π –∞–∫–∫–∞—É–Ω—Ç
    creds, email = authenticate_new_account()

    if not creds or not email:
        print("‚ùå –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –Ω–µ —É–¥–∞–ª–∞—Å—å")
        return

    print()
    print(f"‚úÖ –£—Å–ø–µ—à–Ω–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è!")
    print(f"üìß Email: {email}")
    print()

    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º ID –∏ –ø—É—Ç—å –∫ —Ç–æ–∫–µ–Ω—É
    suggested_id = generate_account_id(email)

    # –°–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ –¥–µ—Ç–∞–ª—è—Ö
    print(f"ID –∞–∫–∫–∞—É–Ω—Ç–∞ (–ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã–π: {suggested_id}): ", end='')
    account_id = input().strip() or suggested_id

    print(f"–ù–∞–∑–≤–∞–Ω–∏–µ –∞–∫–∫–∞—É–Ω—Ç–∞ (–ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω–æ–µ: {email}): ", end='')
    account_name = input().strip() or email

    # –ü—É—Ç—å –∫ —Ç–æ–∫–µ–Ω—É
    token_path = f"gmail_tokens/token_{account_id}.json"

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–æ–∫–µ–Ω
    print()
    print(f"üíæ –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–æ–∫–µ–Ω –≤ {token_path}...")
    with open(token_path, 'w') as token_file:
        token_file.write(creds.to_json())

    # –î–æ–±–∞–≤–ª—è–µ–º –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    print(f"üìù –î–æ–±–∞–≤–ª—è–µ–º –∞–∫–∫–∞—É–Ω—Ç –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é...")
    if add_account_to_config(account_id, account_name, token_path):
        print()
        print("=" * 60)
        print("‚úÖ –ì–û–¢–û–í–û! –ù–æ–≤—ã–π –∞–∫–∫–∞—É–Ω—Ç —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω")
        print("=" * 60)
        print()
        print(f"ID –∞–∫–∫–∞—É–Ω—Ç–∞: {account_id}")
        print(f"–ù–∞–∑–≤–∞–Ω–∏–µ: {account_name}")
        print(f"Email: {email}")
        print(f"–¢–æ–∫–µ–Ω: {token_path}")
        print(f"–°—Ç–∞—Ç—É—Å: ‚ö†Ô∏è  –û–¢–ö–õ–Æ–ß–ï–ù (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)")
        print()
        print("üì± –ß—Ç–æ–±—ã –≤–∫–ª—é—á–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /accounts –≤ –±–æ—Ç–µ")
    else:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é")


if __name__ == '__main__':
    main()
